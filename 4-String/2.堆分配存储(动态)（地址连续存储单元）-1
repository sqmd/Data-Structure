#include<stdio.h>
#include<stdlib.h>

#define OK 1
#define ERROR 0
#define TRUE 1
#define FALSE 0
#define OVERFLOW 3
typedef int ElemType;
typedef int Status;

typedef struct{
	char *ch;
	int length;
}HString;

//在S的第pos个字符之前插入T
Status StrInsert(HString &S, int pos, HString T){
	if (pos<1 || pos>S.length+1) return ERROR;

	/*
	realloc：
	如果是将分配的内存扩大，则有以下情况：
	1）如果当前内存段后面有需要的内存空间，则直接扩展这段内存空间，realloc()将返回原指针。
	2）如果当前内存段后面的空闲字节不够，那么就使用堆中的第一个能够满足这一要求的内存块，将目前的数据复制到新的位置，-----------------------
	并将原来的数据块释放掉，返回新的内存块位置。
	3）如果申请失败，将返回NULL，此时，原来的指针仍然有效。
	*/

	if (T.length){//
		S.ch = (char *)realloc(S.ch, sizeof(char)*(S.length + T.length));
		if (!S.ch) exit(OVERFLOW);

		for (int i = S.length-1; i >=pos-1 ; i--){
			S.ch[i + T.length] = S.ch[i];
		}
		for (int i = 1; i <= T.length; i++){
			S.ch[pos - 2 + i] = T.ch[i - 1];  //pos-1
		}
		S.length += T.length;//		
	}
	return OK;	
}
